@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-white font-pr" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bienvenido @UserManager.GetUserName(User).Substring(0, UserManager.GetUserName(User).IndexOf("@") )</a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class=" btn text-white btn-logout">Salir</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="btn btn-register " id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
    </li>
    <li class="nav-item">
            <a class="btn btn-login" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
    </li>
}
</ul>
